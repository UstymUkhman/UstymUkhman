/* stylelint-disable value-keyword-case */

@mixin horizontal-gradient ($color1, $color2, $from: 0%, $to: 100%) {
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$color1', endColorstr='$color2', GradientType=1);
  background-image: linear-gradient(to right, $color1 $from, $color2 $to);
}

@mixin vertical-gradient ($color1, $color2, $from: 0%, $to: 100%) {
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$color1', endColorstr='$color2', GradientType=0);
  background-image: linear-gradient(to bottom, $color1 $from, $color2 $to);
}

/* stylelint-enable value-keyword-case */

@mixin object-fit ($fit: fill, $position: null) {
  -o-object-fit: $fit;
  object-fit: $fit;

  @if $position {
    font-family: 'object-fit: #{$fit}; object-position: #{$position}';
    -o-object-position: $position;
    object-position: $position;
  }

  @else {
    font-family: 'object-fit: #{$fit}';
  }
}

@mixin vh ($prop, $height, $additionalProps: null) {
  #{$prop}: calc(var(--height) / 100 * #{$height}) $additionalProps;
}

@mixin vw ($prop, $width, $additionalProps: null) {
  #{$prop}: calc(var(--width) / 100 * #{$width}) $additionalProps;
}

@mixin center-size ($width: 100%, $height: $width) {
  @include size($width, $height);
  position: absolute;
  display: block;
  margin: auto;

  bottom: 0;
  right: 0;
  left: 0;
  top: 0;
}

@mixin center-transform {
  transform: translate(-50%, -50%);
  position: absolute;

  display: block;
  margin: auto;

  left: 50%;
  top: 50%;
}

@mixin absolute-size {
  position: absolute;
  @include size;
}

@mixin size ($width: 100%, $height: $width) {
  height: $height;
  width: $width;
}

@mixin console-button ($border-size: 3px) {
  $animaiton-delay: 0.15s;

  .button-border {
    .button-box {
      text-align: center;

      &::after,
      &::before,
      .button::before,
      .button::after {
        transition: transform 0.15s cubic-bezier(1, 0.75, 0.15, 0.9);
        background-color: $light-green;

        visibility: visible;
        position: absolute;
        content: '';
      }

      &::after,
      &::before {
        @include size($border-size, 100%);
        transform: scale3d(1, 0, 1);

        z-index: 1;
        top: 0;
      }

      &::before {
        transform-origin: 50% 100%;
        transition-delay: 0s;
        left: 0;
      }

      &::after {
        transition-delay: $animaiton-delay * 2;
        transform-origin: 50% 0%;
        right: 0;
      }

      .button-background {
        transition: background-color 0.5s;
        background-color: transparent;
        @include center-size;
      }

      .button {
        transition: color 0.5s;
        visibility: hidden;

        position: relative;
        color: $green;

        z-index: 1;
        margin: 0;

        &::after,
        &::before {
          @include size(100%, $border-size);
          transform: scale3d(0, 1, 1);
          z-index: 1;
          left: 0;
        }

        &::before {
          transition-delay: $animaiton-delay * 3;
          transform-origin: 0% 50%;
          top: 0;
        }

        &::after {
          transition-delay: $animaiton-delay;
          transform-origin: 100% 50%;
          bottom: 0;
        }
      }

      &.active {
        &::before {
          transition-delay: $animaiton-delay * 3;
          transform: scale3d(1, 1, 1);
        }

        &::after {
          transition-delay: $animaiton-delay;
          transform: scale3d(1, 1, 1);
        }

        .button-background {
          background-color: $green-background;
          transition-duration: 0.25s;
          transition-delay: 0.5s;
        }

        .button {
          transition-delay: 0.5s;
          visibility: visible;
          color: $fade-green;
        }

        .button::before {
          transform: scale3d(1, 1, 1);
          transition-delay: 0s;
        }

        .button::after {
          transition-delay: $animaiton-delay * 2;
          transform: scale3d(1, 1, 1);
        }
      }

      &.visible .button {
        visibility: visible;
      }
    }

    .button-box.pressed .button-background,
    .button-box.pressed .button {
      transition-duration: 0.1s;
      transition-delay: 0s;
    }

    .button-box.selected {
      .button-background {
        background-color: $dark-green;
      }

      .button {
        color: $energy-green;
      }
    }
  }
}

@mixin back-button {
  &.button.back {
    backface-visibility: hidden;

    span:first-child {
      transition: transform 0.3s ease-out;
      transition-delay: 0.5s !important;

      transform: translateX(-25px);
      position: absolute;

      @include breakpoint($sm-down) {
        transform: translateX(-15px);
      }
    }

    &.active {
      :first-child {
        transform: translateX(-35px);

        @include breakpoint($sm-down) {
          transform: translateX(-25px);
        }
      }
    }
  }
}

@mixin white-rabbit ($size: 18px) {
  font-family: 'White Rabbit', monospace;
  font-size: $size;
  color: $green;
}

@mixin martix-code-nfi {
  font-family: 'Martix Code NFI', monospace;
  font-size: 30px;
  color: $green;
}

@mixin desktop-hover {
  html.no-mobile & {
    &:hover {
      @content;
    }
  }
}

@mixin ie-specific {
  html.ie & {
    @content;
  }
}
