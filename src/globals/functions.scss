$empty: ' ';

$bourbon-timing: (
  ease              ,
  ease-in           ,
  ease-out          ,
  ease-in-out       ,
  $ease-in-quad     ,
  $ease-out-quad    ,
  $ease-in-out-quad ,
  $ease-in-cubic    ,
  $ease-out-cubic   ,
  $ease-in-out-cubic,
  $ease-in-quart    ,
  $ease-out-quart   ,
  $ease-in-out-quart,
  $ease-in-quint    ,
  $ease-out-quint   ,
  $ease-in-out-quint,
  $ease-in-sine     ,
  $ease-out-sine    ,
  $ease-in-out-sine ,
  $ease-in-expo     ,
  $ease-out-expo    ,
  $ease-in-out-expo ,
  $ease-in-circ     ,
  $ease-out-circ    ,
  $ease-in-out-circ ,
  $ease-in-back     ,
  $ease-out-back    ,
  $ease-in-out-back ,
  linear
);

/*
 * Global Functions
 */

@function stringReplace($string, $search: ' ', $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return unquote(str-slice($string, 1, $index - 1) + $replace + stringReplace(str-slice($string, $index + str-length($search)), $search, $replace));
  }

  @return unquote($string);
}

// @function multiplyValues($variable, $multiple: 1) {
//   $string: $void;

//   @for $i from 1 through $multiple {
//     $string: #{$string}#{$variable}#{$empty};
//   }

//   @return $string;
// }

// @function concatRules($list, $constant: $void) {
//   $string: $void;

//   @each $el in $list {
//     $string: #{$string}#{$el} #{$constant};
//   }

//   @return $string;
// }

@function getRandom($min: 1, $max: 100) {
  @return floor(random() * ($max - $min + 1)) + $min;
}

@function getRandomTimingFunction() {
  @return nth($bourbon-timing, random(length($bourbon-timing)));
}
