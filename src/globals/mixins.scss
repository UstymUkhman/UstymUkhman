/*
 * Cross-Browser Rules:
 */

@mixin display($value) {
  @if $value == "flex" {
    display: -webkit-box;
    display: -moz-box;
    display: box;

    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;

  } @else if $value == "inline-flex" {
    display: -webkit-inline-box;
    display: -moz-inline-box;
    display: inline-box;

    display: -webkit-inline-flex;
    display: -moz-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;

  } @else {
    display: $value;
  }
}

@mixin transform($transformation...) {
  -webkit-transform: $transformation;
  -moz-transform: $transformation;
  -ms-transform: $transformation;
  -o-transform: $transformation;
  transform: $transformation;
}

@mixin animation-delay($delay) {
  -webkit-animation-delay: $delay;
  -moz-animation-delay: $delay;
  -o-animation-delay: $delay;
  animation-delay: $delay;
}

@mixin transition($animation...) {
  -webkit-transition: $animation;
  -moz-transition: $animation;
  -o-transition: $animation;
  transition: $animation;
}

@mixin transition-property($property) {
  $webkit-property: stringReplace("#{-webkit-$property}");
  $moz-property: stringReplace("#{-moz-$property}");
  $o-property: stringReplace("#{-o-$property}");

  -webkit-transition-property: $webkit-property;
  -moz-transition-property: $moz-property;
  -o-transition-property: $o-property;
  transition-property: $property;
}

@mixin transition-timing-function($function) {
  -webkit-transition-timing-function: $function;
  -moz-transition-timing-function: $function;
  -o-transition-timing-function: $function;
  transition-timing-function: $function;
}

@mixin transition-delay($delay) {
  -webkit-transition-delay: $delay;
  -moz-transition-delay: $delay;
  -o-transition-delay: $delay;
  transition-delay: $delay;
}

@mixin transform-origin($origin) {
  -webkit-transform-origin: $origin;
  -moz-transform-origin: $origin;
  -ms-transform-origin: $origin;
  -o-transform-origin: $origin;
  transform-origin: $origin;
}

@mixin prevent-selection($mode: none) {
  -webkit-user-select: $mode;
  -moz-user-select: $mode;
  -ms-user-select: $mode;
  user-select: $mode;
}

@mixin touch-callout($mode: none) {
  -webkit-touch-callout: $mode;
  -moz-touch-callout: $mode;
  -ms-touch-callout: $mode;
  -o-touch-callout: $mode;
  touch-callout: $mode;
}

@mixin text-size-adjust($mode: none) {
  -webkit-text-size-adjust: $mode;
  -moz-text-size-adjust: $mode;
  -ms-text-size-adjust: $mode;
  -o-text-size-adjust: $mode;
  text-size-adjust: $mode;
}

@mixin font-smoothing($mode) {
  -moz-osx-font-smoothing: $mode;
  -webkit-font-smoothing: $mode;
}


/*
 * Custom Mixins:
 */

@mixin visible-overflow {
  -webkit-overflow-scrolling: touch;
  -webkit-touch-callout: default;
  overflow-x: hidden;
  overflow-y: auto;
}

@mixin hidden-overflow {
  -webkit-overflow-scrolling: auto;
  -webkit-touch-callout: none;
  overflow: hidden;
}

@mixin backface-visibility($mode) {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

@mixin white-rabbit {
  font-family: 'White Rabbit';
  font-size: 18px;
  color: $green;
}

@mixin martix-code-nfi {
  font-family: 'Martix Code NFI';
  font-size: 30px;
  color: $green;
}

@mixin middle-translate {
  @include position(absolute, $half null null $half);
  @include transform(translate(-$half, -$half));
}

@mixin middle-align {
  @include position(absolute, $null);
  margin: auto;
}

@mixin remove-element {
  display: none;
}

@mixin hidden-element {
  visibility: hidden;
}

@mixin visible-element {
  visibility: visible;
}

@mixin dissolve-text($letters) {
  $dissolve-easing: cubic-bezier(0.645,  0.045, 0.355, 1.000);
  @include transition(opacity 0.5s $dissolve-easing);

  @for $i from 1 through $letters {
    &:nth-child(#{$i}) {
      $delay: getRandom(500, 2000);
      transition-delay: #{$delay}ms;
    }
  }
}

@mixin back-button($border-size: 3px) {
  $flash-easing: cubic-bezier(0.075,  0.82, 0.165, 1);
  $scale-complete: scale3d(1, 1, 1);
  $animaiton-delay: .15s;

  @keyframes flash {
    0%   { background-color: $dark-green;   }
    50%  { background-color: $energy-green; }
    100% { background-color: $dark-green;   }
  }

  div.button-border {
    @include visible-element;

    div.button-box {
      text-align: center;
      width: 150px;

      @include breakpoint($mobile) {
        width: 120px;
      }

      &:before, &:after,
      p.button:before,
      p.button:after {
        @include transition-timing-function(cubic-bezier(1, .75, .15, .9));
        @include transition(transform .15s);

        background-color: $light-green;
        visibility: visible;
        position: absolute;
        content: '';
      }

      &:before, &:after {
        @include transform(scale3d(1, 0, 1));
        @include size($border-size $max);
        top: $null;
      }

      &:before {
        @include transform-origin($half $max);
        @include transition-delay(0s);
        left: $null;
      }

      &:after {
        @include transition-delay($animaiton-delay * 2);
        @include transform-origin($half $none);
        right: $null;
      }

      div.button-background {
        @include transition(background-color .25s ease .5s);
        @include position(absolute, $null);
        @include size(150px 50px);

        background-color: transparent;
        z-index: -1;

        @include breakpoint($mobile) {
          @include size(120px 40px);
        }
      }

      p.button {
        @include transition(color .5s ease .5s);
        @include hidden-element;
        @include white-rabbit;

        padding: 0 10% 0 20%;
        line-height: 50px;
        font-size: 25px;
        color: $green;
        margin: $null;

        @include breakpoint($mobile) {
          padding-left: 25%;
          line-height: 40px;
          font-size: 20px;
        }

        &:before, &:after {
          @include transform(scale3d(0, 1, 1));
          @include size($max $border-size);
          left: $null;
        }

        &:before {
          @include transition-delay($animaiton-delay * 3);
          @include transform-origin($none $half);
          top: $null;
        }

        &:after {
          @include transition-delay($animaiton-delay);
          @include transform-origin($max $half);
          bottom: $null;
        }
      }

      &.active {
        &:before {
          @include transition-delay($animaiton-delay * 3);
          @include transform($scale-complete);
        }

        &:after {
          @include transition-delay($animaiton-delay);
          @include transform($scale-complete);
        }

        div.button-background {
          background-color: $dark-green;
        }

        p.button {
          -webkit-margin-before: 0;
          -webkit-margin-after: 0;
          visibility: visible;
          color: $fade-green;

          &:before {
            @include transform($scale-complete);
            @include transition-delay(0s);
          }

          &:after {
            @include transition-delay($animaiton-delay * 2);
            @include transform($scale-complete);
          }
        }
      }

      &.selected {
        div.button-background {
          -webkit-animation: flash 100ms $flash-easing;
          -moz-animation: flash 100ms $flash-easing;
          -o-animation: flash 100ms $flash-easing;
          animation: flash 100ms $flash-easing;
        }
      }
    }
  }
}
